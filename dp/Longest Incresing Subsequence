class Solution {
public:
    int solve(int ind, int prev, vector<int>& nums, vector<vector<int>>& dp){
        if(ind >= nums.size()){
            return 0;
        }
        if(prev != -1 && dp[ind][prev] != -1){
            return dp[ind][prev];
        }
       
        int pick = 0;
        int not_pick = solve(ind+1, prev, nums, dp);
        if(prev == -1 || nums[ind] > nums[prev]){
            pick = 1 + solve(ind+1, ind, nums, dp);
        }
        if (prev != -1) {
            dp[ind][prev] = max(pick, not_pick);
        }
        return max(pick, not_pick);
    }
    int lengthOfLIS(vector<int>& nums) {
        int n = nums.size();
        vector<vector<int>> dp(n+1, vector<int>(n+1, -1));
        return solve(0, -1, nums, dp);
    }
};